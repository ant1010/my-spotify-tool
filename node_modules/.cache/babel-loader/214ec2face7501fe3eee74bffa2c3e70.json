{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./Login\";\nimport Player from \"./Player\";\nimport { getTokenFromURL } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./ServiceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [{\n    user\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromURL();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n    }\n\n    console.log(\"ihaveatoken!\", _token);\n  });\n  console.log(\"usererer\", user);\n  console.log(\"usertoken44\", token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"i am logged in\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HSyLWKPYEUYa6xgYFB5DgEg6R0I=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/src/App.js"],"names":["React","useEffect","Login","Player","getTokenFromURL","SpotifyWebApi","useDataLayerValue","spotify","App","token","setToken","useState","user","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getMe","then","console","log"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA2B,oBAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAQC,QAAR,IAAoBP,iBAAiB,EAA3C;AACAL,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMa,IAAI,GAAGV,eAAe,EAA5B;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AAEA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAGD,MAAH,EAAU;AACRP,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACAV,MAAAA,OAAO,CAACY,cAAR,CAAuBF,MAAvB;AACAJ,MAAAA,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAE,WAAP;AAAoBX,QAAAA,KAAK,EAACQ;AAA1B,OAAD,CAAR;AAEAV,MAAAA,OAAO,CAACc,KAAR,GAAgBC,IAAhB,CAAqBV,IAAI,IAAI;AAC3BC,QAAAA,QAAQ,CAAC;AAACO,UAAAA,IAAI,EAAE,UAAP;AAAmBR,UAAAA,IAAI,EAACA;AAAxB,SAAD,CAAR;AACD,OAFD;AAGD;;AACDW,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,MAA5B;AACA,GAfQ,CAAT;AAgBAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,IAAxB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Bf,KAA1B;AAEC,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEEA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA6B,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAFpC;AAAA;AAAA;AAAA;AAAA,UAFF;AASD;;GA/BQD,G;UAEkBF,iB;;;KAFlBE,G;AAiCT,eAAeA,GAAf","sourcesContent":["\nimport React, {useEffect} from \"react\";\nimport './App.css';\nimport Login from \"./Login\";\nimport Player from \"./Player\";\nimport { getTokenFromURL } from \"./spotify\";\nimport SpotifyWebApi  from \"spotify-web-api-js\";\nimport {useDataLayerValue} from \"./ServiceProvider\"\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n const [token,setToken] = useState(null);\n const [{user},dispatch] = useDataLayerValue();\n useEffect(()=>{\n  const hash = getTokenFromURL();\n  window.location.hash = \"\";\n\n  const _token = hash.access_token;\n  if(_token){\n    setToken(_token);\n    spotify.setAccessToken(_token);\n    dispatch({type: \"SET_TOKEN\", token:_token, });\n    \n    spotify.getMe().then(user => {\n      dispatch({type: 'SET_USER', user:user,})\n    })\n  }\n  console.log(\"ihaveatoken!\", _token);\n });\n console.log(\"usererer\", user);\n console.log(\"usertoken44\",token);\n \n  return (\n    \n    <div className=\"app\">\n    {\n      token ? <h1>\"i am logged in\"</h1>:<Login/>\n    }\n  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}