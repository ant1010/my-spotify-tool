{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/SongLookup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./SongLookup.css\";\nimport { Container, Form } from 'react-bootstrap';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport TrackItem from \"./TrackItem.js\"; //const spotifyApi = new SpotifyWebApi({clientId:'6ca42bd62f0542959053535545c73611',});\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongLookup(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  // const accessToken = useAuth(spotify);\n  // console.log(accessToken);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); // useEffect(() => {\n  //     if (!accessToken) return;\n  //     spotifyApi.setAccessToken(accessToken);\n  // }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    let cancel = false;\n    spotify.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackItem, {\n        track: track\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongLookup, \"LTgYVyrwcc/OxagTfuzeEYdwPNk=\");\n\n_c = SongLookup;\nexport default SongLookup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLookup\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/SongLookup.js"],"names":["React","useState","useEffect","Container","Form","useAuth","SpotifyWebApi","TrackItem","SongLookup","spotify","search","setSearch","searchResults","setSearchResults","cancel","searchTracks","then","res","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,kBAAP;AACA,SAAQC,SAAR,EAAkBC,IAAlB,QAA6B,iBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;;;AAEA,SAASC,UAAT,OAA+B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAE3B;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD,CAL2B,CAO3B;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,MAAL,EAAa,OAAOG,gBAAgB,CAAC,EAAD,CAAvB;AACb,QAAIC,MAAM,GAAG,KAAb;AACAL,IAAAA,OAAO,CAACM,YAAR,CAAqBL,MAArB,EAA6BM,IAA7B,CAAkCC,GAAG,IAAI;AACrC,UAAIH,MAAJ,EAAY;AACZD,MAAAA,gBAAgB,CACZI,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,KAAK,IAAI;AAC1B,cAAMC,kBAAkB,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjB,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACH,SAJsB,EAKvBL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,CALuB,CAA3B;AAQA,eAAO;AACHK,UAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBC,IADtB;AAEHC,UAAAA,KAAK,EAAEX,KAAK,CAACU,IAFV;AAGHE,UAAAA,GAAG,EAAEZ,KAAK,CAACY,GAHR;AAIHC,UAAAA,QAAQ,EAAEZ,kBAAkB,CAACa;AAJ1B,SAAP;AAMH,OAfD,CADY,CAAhB;AAmBH,KArBD;AAuBA,WAAO,MAAOrB,MAAM,GAAG,IAAvB;AAGH,GA7BQ,EA6BN,CAACJ,MAAD,CA7BM,CAAT;AA+BA,sBAEI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAiC,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAxC;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,sBAFhB;AAGI,MAAA,KAAK,EAAElB,MAHX;AAII,MAAA,QAAQ,EAAE0B,CAAC,IAAIzB,SAAS,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,gBACK3B,aAAa,CAACQ,GAAd,CAAkBC,KAAK,iBACpB,QAAC,SAAD;AACI,QAAA,KAAK,EAAEA;AADX,SAESA,KAAK,CAACY,GAFf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH;;GAlEQzB,U;;KAAAA,U;AAoET,eAAeA,UAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport \"./SongLookup.css\"\nimport {Container,Form} from 'react-bootstrap';\nimport useAuth from './useAuth';\nimport SpotifyWebApi  from \"spotify-web-api-js\";\nimport TrackItem from \"./TrackItem.js\";\n\n//const spotifyApi = new SpotifyWebApi({clientId:'6ca42bd62f0542959053535545c73611',});\n\nfunction SongLookup({spotify}) {\n\n    // const accessToken = useAuth(spotify);\n    // console.log(accessToken);\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([])\n\n    // useEffect(() => {\n    //     if (!accessToken) return;\n    //     spotifyApi.setAccessToken(accessToken);\n    // }, [accessToken]);\n\n    useEffect(() => {\n        if (!search) return setSearchResults([])\n        let cancel = false;\n        spotify.searchTracks(search).then(res => {\n            if (cancel) return;\n            setSearchResults(\n                res.tracks.items.map(track => {\n                    const smallestAlbumImage = track.album.images.reduce(\n                        (smallest, image) => {\n                            if (image.height < smallest.height) return image\n                            return smallest;\n                        },\n                        track.album.images[0]\n                    )\n\n                    return {\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        uri: track.uri,\n                        albumUrl: smallestAlbumImage.url,\n                    }\n                })\n            )\n           \n        })\n\n        return () => (cancel = true)\n\n\n    }, [search])\n\n    return (\n\n        <Container className=\"container\" style={{ height: \"100vh\" }}>\n            <Form.Control\n                type=\"search\"\n                placeholder=\"Search Songs/Artists\"\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n            />\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n                {searchResults.map(track => (\n                    <TrackItem\n                        track={track}\n                        key={track.uri}\n\n                    />\n                ))}\n\n            </div>\n\n        </Container>\n\n    )\n}\n\nexport default SongLookup\n"]},"metadata":{},"sourceType":"module"}