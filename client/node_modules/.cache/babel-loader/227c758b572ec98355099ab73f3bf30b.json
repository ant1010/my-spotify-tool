{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/MassPlaylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./MassPlaylist.css\";\nimport TrackItem from \"./TrackItem.js\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MassPlaylist(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function handleChange(event) {\n    setSearch(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    setSearchResults([]);\n    const searchList = search.split(\"\\n\");\n    console.log(\"list\", searchList);\n    searchList.forEach(track => {\n      spotify.searchTracks(track).then(res => {\n        console.log(res.tracks.items[0]);\n        const element = res.tracks.items[0];\n        const smallestAlbumImage = element.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, element.album.images[0]);\n        const data = {\n          artist: element.artists[0].name,\n          title: element.name,\n          uri: element.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n        setSearchResults(searchResults => [...searchResults, data]);\n      });\n    });\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    console.log(\"searchreasults\", searchResults);\n  }, [searchResults]);\n\n  function closeModal() {\n    setModalOn(false);\n  }\n\n  function testPlaylistName(name) {\n    console.log(name);\n    let duplicate = false;\n    spotify.getUserPlaylists('aarreol', {\n      \"limit\": 50\n    }).then(function (data) {\n      for (let i = 0; i < data.items.length; ++i) {\n        if (data.items[i].name == name) {\n          return `Playlist called ${name} already exists.`;\n        }\n      }\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n\n    if (duplicate == true) {\n      return \"something else\";\n    }\n\n    return \"Playlist Created!\";\n  }\n\n  function handleCreatePlaylist(event) {\n    console.log(\"pressed\");\n    setModalOn(!modalOn);\n\n    if (searchResults.length == 0) {\n      return;\n    } //Create a private playlist\n\n\n    spotify.createPlaylist('aarreol', {\n      'name': \"test\",\n      'description': 'My description',\n      'public': false\n    }).then(function (data) {\n      console.log('Created playlist!');\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit PS\",\n      onClick: () => setModalOn(true),\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textBox\",\n        value: search,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackItem, {\n        track: track\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), modalOn ? /*#__PURE__*/_jsxDEV(Modal, {\n      playlistName: testPlaylistName,\n      close: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"modaloff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 85\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MassPlaylist, \"lFkcuQkZbZNZsyxfN2fUQHqZ2rM=\");\n\n_c = MassPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MassPlaylist\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/MassPlaylist.js"],"names":["React","useState","useEffect","TrackItem","Modal","MassPlaylist","spotify","search","setSearch","searchResults","setSearchResults","modalOn","setModalOn","handleChange","event","target","value","handleSubmit","searchList","split","console","log","forEach","track","searchTracks","then","res","tracks","items","element","smallestAlbumImage","album","images","reduce","smallest","image","height","data","artist","artists","name","title","uri","albumUrl","url","preventDefault","closeModal","testPlaylistName","duplicate","getUserPlaylists","i","length","err","handleCreatePlaylist","createPlaylist","overflowY","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,eAAe,SAASC,YAAT,OAAiC;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,KAAD,CAArC;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EACA;AACGN,IAAAA,SAAS,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AAEF;;AACD,WAASC,YAAT,CAAsBH,KAAtB,EAA4B;AACzBJ,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACC,UAAMQ,UAAU,GAAGX,MAAM,CAACY,KAAP,CAAa,IAAb,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,UAAnB;AACAA,IAAAA,UAAU,CAACI,OAAX,CAAoBC,KAAD,IAAW;AAE1BjB,MAAAA,OAAO,CAACkB,YAAR,CAAqBD,KAArB,EAA4BE,IAA5B,CAAiCC,GAAG,IAAI;AACpCN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAZ;AACA,cAAMC,OAAO,GAAGH,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAhB;AACA,cAAME,kBAAkB,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqBC,MAArB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjB,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACH,SAJsB,EAKvBL,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAArB,CALuB,CAA3B;AAOA,cAAMK,IAAI,GAAG;AAETC,UAAAA,MAAM,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAFlB;AAGTC,UAAAA,KAAK,EAAEZ,OAAO,CAACW,IAHN;AAITE,UAAAA,GAAG,EAAEb,OAAO,CAACa,GAJJ;AAKTC,UAAAA,QAAQ,EAAEb,kBAAkB,CAACc;AALpB,SAAb;AASAlC,QAAAA,gBAAgB,CAACD,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAkB4B,IAAlB,CAAlB,CAAhB;AACH,OApBD;AAsBH,KAxBD;AAyBAvB,IAAAA,KAAK,CAAC+B,cAAN;AACH;;AACD3C,EAAAA,SAAS,CAAC,MAAK;AACXkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BZ,aAA7B;AACH,GAFQ,EAEP,CAACA,aAAD,CAFO,CAAT;;AAGA,WAASqC,UAAT,GAAqB;AACjBlC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACD,WAASmC,gBAAT,CAA0BP,IAA1B,EAA+B;AAC3BpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACA,QAAIQ,SAAS,GAAG,KAAhB;AACA1C,IAAAA,OAAO,CAAC2C,gBAAR,CAAyB,SAAzB,EAAmC;AAAC,eAAQ;AAAT,KAAnC,EACLxB,IADK,CACA,UAASY,IAAT,EAAe;AAEnB,WAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,IAAI,CAACT,KAAL,CAAWuB,MAA9B,EAAqC,EAAED,CAAvC,EAAyC;AACtC,YAAGb,IAAI,CAACT,KAAL,CAAWsB,CAAX,EAAcV,IAAd,IAAsBA,IAAzB,EAA8B;AAC1B,iBAAQ,mBAAkBA,IAAK,kBAA/B;AACH;AACH;AACF,KARK,EAQJ,UAASY,GAAT,EAAc;AACdhC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC+B,GAArC;AACD,KAVK;;AAWH,QAAGJ,SAAS,IAAI,IAAhB,EAAqB;AAAC,aAAO,gBAAP;AAAwB;;AAC3C,WAAO,mBAAP;AACH;;AACD,WAASK,oBAAT,CAA8BvC,KAA9B,EAAqC;AACjCM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,QAAGF,aAAa,CAAC0C,MAAd,IAAwB,CAA3B,EAA6B;AAAC;AAAQ,KAHL,CAKjC;;;AACA7C,IAAAA,OAAO,CAACgD,cAAR,CAAuB,SAAvB,EAAkC;AAAE,cAAO,MAAT;AAAgB,qBAAe,gBAA/B;AAAiD,gBAAU;AAA3D,KAAlC,EACK7B,IADL,CACU,UAAUY,IAAV,EAAgB;AAClBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAHL,EAGO,UAAU+B,GAAV,EAAe;AACdhC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC+B,GAArC;AACH,KALL;AAMItC,IAAAA,KAAK,CAAC+B,cAAN;AACP;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BAEI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAG,MAAIjC,UAAU,CAAC,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAIK,YAAlB;AAA+B,MAAA,SAAS,EAAG,QAA3C;AAAA,8BAEF;AAAU,QAAA,SAAS,EAAG,SAAtB;AAAgC,QAAA,KAAK,EAAEV,MAAvC;AAA+C,QAAA,QAAQ,EAAEM;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFE,eAII;AAAO,QAAA,SAAS,EAAG,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAE0C,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,gBACK9C,aAAa,CAAC+C,GAAd,CAAkBjC,KAAK,iBACpB,QAAC,SAAD;AACI,QAAA,KAAK,EAAEA;AADX,SAESA,KAAK,CAACmB,GAFf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAXJ,EAoBI/B,OAAO,gBAAC,QAAC,KAAD;AAAO,MAAA,YAAY,EAAIoC,gBAAvB;AAAyC,MAAA,KAAK,EAAID;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAD,gBAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApB5E;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAvGuBzC,Y;;KAAAA,Y","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport \"./MassPlaylist.css\";\nimport TrackItem from \"./TrackItem.js\";\nimport Modal from \"./Modal\";\nexport default function MassPlaylist({spotify}) {\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([])\n    const [modalOn,setModalOn] = useState(false);\n\n    function handleChange(event)\n    {\n       setSearch(event.target.value);\n       \n    }\n    function handleSubmit(event){\n       setSearchResults([]);\n        const searchList = search.split(\"\\n\");\n        console.log(\"list\",searchList);\n        searchList.forEach((track) => {\n            \n            spotify.searchTracks(track).then(res => {\n                console.log(res.tracks.items[0])\n                const element = res.tracks.items[0];\n                const smallestAlbumImage = element.album.images.reduce(\n                    (smallest, image) => {\n                        if (image.height < smallest.height) return image\n                        return smallest;\n                    },\n                    element.album.images[0]\n                )\n                const data = { \n                  \n                    artist: element.artists[0].name,\n                    title: element.name,\n                    uri: element.uri,\n                    albumUrl: smallestAlbumImage.url,\n\n                   \n                }\n                setSearchResults(searchResults => [...searchResults,data]);\n            })\n        \n        })\n        event.preventDefault();\n    }\n    useEffect(() =>{\n        console.log(\"searchreasults\",searchResults);\n    },[searchResults])\n    function closeModal(){\n        setModalOn(false);\n    }\n    function testPlaylistName(name){\n        console.log(name);\n        let duplicate = false;\n        spotify.getUserPlaylists('aarreol',{\"limit\":50})\n  .then(function(data) {\n  \n    for(let i = 0; i < data.items.length;++i){\n       if(data.items[i].name == name){\n           return `Playlist called ${name} already exists.`\n       }\n    }\n  },function(err) {\n    console.log('Something went wrong!', err);\n  });\n     if(duplicate == true){return \"something else\"}\n        return \"Playlist Created!\";\n    }\n    function handleCreatePlaylist(event) {\n        console.log(\"pressed\");\n        setModalOn(!modalOn);\n        if(searchResults.length == 0){return;}\n       \n        //Create a private playlist\n        spotify.createPlaylist('aarreol', { 'name':\"test\",'description': 'My description', 'public': false })\n            .then(function (data) {\n                console.log('Created playlist!');\n            }, function (err) {\n                console.log('Something went wrong!', err);\n            });\n            event.preventDefault();\n    }\n\n    return (\n        <div className = \"container\">\n           \n            <button className=\"submit PS\" onClick ={()=>setModalOn(true)} >Create Playlist</button>\n            <form onSubmit = {handleSubmit}className = \"search\">\n                \n          <textarea className = \"textBox\" value={search} onChange={handleChange} />\n                \n                <input className = \"submit\" type=\"submit\" value=\"Submit\" />\n               \n            </form> \n            \n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n                {searchResults.map(track => (\n                    <TrackItem\n                        track={track}\n                        key={track.uri}\n                    />\n                ))}\n\n            </div>\n           {modalOn?<Modal playlistName = {testPlaylistName} close = {closeModal}/>:<h2>modaloff</h2>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}