{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./Player.css\";\nimport Sidebar from './Sidebar';\nimport Body from './Body';\nimport Footer from './Footer';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./ServiceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi({\n  clientId: '6ca42bd62f0542959053535545c73611'\n});\n\nfunction Player(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const [action, setAction] = useState('Home');\n  const [currentSong, setSong] = useState();\n  const accessToken = useAuth(code);\n  const [{\n    user,\n    token,\n    playing,\n    playlists\n  }, dispatch] = useDataLayerValue();\n\n  const switcher = newAction => {\n    setAction(newAction);\n  };\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotify.setAccessToken(accessToken);\n    spotify.getUserPlaylists('aarreol', {\n      \"limit\": 50\n    }).then(function (data) {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlists: data.items\n      });\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  }, [accessToken]);\n  console.log(\"playlists: \", playlists);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        switcher: switcher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        spotify: spotify,\n        action: action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        accessToken: accessToken,\n        trackUri: currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"dDLlkhAu6KKzZrCCdCEUmX63mtg=\", false, function () {\n  return [useAuth, useDataLayerValue];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Player.js"],"names":["React","useState","useEffect","Sidebar","Body","Footer","useAuth","SpotifyWebApi","useDataLayerValue","spotify","clientId","Player","code","action","setAction","currentSong","setSong","accessToken","user","token","playing","playlists","dispatch","switcher","newAction","setAccessToken","getUserPlaylists","then","data","type","items","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA2B,oBAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AAEC,MAAMC,OAAO,GAAG,IAAIF,aAAJ,CAAkB;AAACG,EAAAA,QAAQ,EAAC;AAAV,CAAlB,CAAhB;;AACA,SAASC,MAAT,OAAwB;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACpB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBb,QAAQ,CAAC,MAAD,CAAnC;AACA,QAAM,CAACc,WAAD,EAAcC,OAAd,IAAyBf,QAAQ,EAAvC;AACA,QAAMgB,WAAW,GAAGX,OAAO,CAACM,IAAD,CAA3B;AACA,QAAM,CAAC;AAACM,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA,OAAZ;AAAoBC,IAAAA;AAApB,GAAD,EAAgCC,QAAhC,IAA4Cd,iBAAiB,EAAnE;;AAEA,QAAMe,QAAQ,GAAIC,SAAD,IAAe;AAACV,IAAAA,SAAS,CAACU,SAAD,CAAT;AAAqB,GAAtD;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACe,WAAJ,EAAgB;AAChBR,IAAAA,OAAO,CAACgB,cAAR,CAAuBR,WAAvB;AAEAR,IAAAA,OAAO,CAACiB,gBAAR,CAAyB,SAAzB,EAAmC;AAAC,eAAQ;AAAT,KAAnC,EACAC,IADA,CACK,UAASC,IAAT,EAAe;AACrBN,MAAAA,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAC,eAAN;AAAsBR,QAAAA,SAAS,EAACO,IAAI,CAACE;AAArC,OAAD,CAAR;AACC,KAHA,EAGC,UAASC,GAAT,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;AACD,KALA;AAQH,GAZQ,EAYP,CAACd,WAAD,CAZO,CAAT;AAaDe,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BZ,SAA1B;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA,2BACA;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,8BAEI,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAGE;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAId,OAAjB;AAA0B,QAAA,MAAM,EAAII;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAII,WAAvB;AAAoC,QAAA,QAAQ,EAAIF;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAlCSJ,M;UAGeL,O,EAC8BE,iB;;;KAJ7CG,M;AAoCV,eAAeA,MAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport \"./Player.css\";\nimport Sidebar from './Sidebar';\nimport Body from './Body';\nimport Footer from './Footer';\nimport useAuth from './useAuth';\nimport SpotifyWebApi  from \"spotify-web-api-js\";\nimport {useDataLayerValue} from \"./ServiceProvider\"\n\n const spotify = new SpotifyWebApi({clientId:'6ca42bd62f0542959053535545c73611',});\n function Player({code}) {\n     const [action,setAction] = useState('Home');\n     const [currentSong, setSong] = useState();\n     const accessToken = useAuth(code);\n     const [{user,token,playing,playlists},dispatch] = useDataLayerValue();\n\n     const switcher = (newAction) => {setAction(newAction)}\n     \n     useEffect(() => {\n         if(!accessToken)return;\n         spotify.setAccessToken(accessToken);\n         \n         spotify.getUserPlaylists('aarreol',{\"limit\":50})\n        .then(function(data) {\n        dispatch({type:\"SET_PLAYLISTS\",playlists:data.items})\n        },function(err) {\n          console.log('Something went wrong!', err);\n        });\n\n\n     },[accessToken]);\n    console.log(\"playlists: \",playlists)\n    return (\n        <div className = \"player\">\n        <div className = \"player__body\">\n           \n            <Sidebar switcher= {switcher}/>\n            <Body spotify = {spotify} action = {action}/>\n            <Footer accessToken = {accessToken} trackUri = {currentSong} />\n            \n        </div>\n            \n        </div>\n    )\n}\n\nexport default Player\n"]},"metadata":{},"sourceType":"module"}