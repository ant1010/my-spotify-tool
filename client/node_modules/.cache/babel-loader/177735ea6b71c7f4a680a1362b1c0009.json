{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/ServiceProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataLayerContext = /*#__PURE__*/createContext();\nexport const ServiceProvider = _ref => {\n  _s();\n\n  let {\n    reducer,\n    initialState,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 70\n  }, this);\n};\n\n_s(ServiceProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = ServiceProvider;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayerContext);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceProvider\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/ServiceProvider.js"],"names":["React","createContext","useContext","useReducer","DataLayerContext","ServiceProvider","reducer","initialState","children","useDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA2D,OAA3D;;AACA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;AACP,OAAO,MAAMI,eAAe,GAAG;AAAA;;AAAA,MAAC;AAACC,IAAAA,OAAD;AAASC,IAAAA,YAAT;AAAsBC,IAAAA;AAAtB,GAAD;AAAA,sBAAsC,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAIL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAA9C;AAAA,cACpEC;AADoE;AAAA;AAAA;AAAA;AAAA,UAAtC;AAAA,CAAxB;;GAAMH,e;;KAAAA,e;AAGb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAA1B;;IAAMK,iB","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\nexport const DataLayerContext = createContext();\nexport const ServiceProvider = ({reducer,initialState,children}) => (<DataLayerContext.Provider value = {useReducer(reducer, initialState)}>\n{children}\n</DataLayerContext.Provider>);\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n\n"]},"metadata":{},"sourceType":"module"}