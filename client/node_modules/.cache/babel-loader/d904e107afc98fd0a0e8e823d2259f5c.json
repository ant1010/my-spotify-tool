{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/SongLookup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./SongLookup.css\";\nimport { Container, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongLookup(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [search, setSearch] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    console.log(\"search: \", search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongLookup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Type in a Song, Artist, or Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column py-2\",\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"search\",\n        placeholder: \"Search Songs/Artists\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongLookup, \"28/phv7eeyZghhKfgeJOAl/EgkM=\");\n\n_c = SongLookup;\nexport default SongLookup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLookup\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/SongLookup.js"],"names":["React","useState","useEffect","Container","Form","SongLookup","spotify","search","setSearch","searchResults","setSearchResults","accessToken","console","log","height","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,kBAAP;AACA,SAAQC,SAAR,EAAkBC,IAAlB,QAA6B,iBAA7B;;;AACA,SAASC,UAAT,OAA+B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAE7B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,EAAnC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,MAAJ,EAAY,OAAOG,gBAAgB,CAAC,EAAD,CAAvB;AACZ,QAAG,CAACC,WAAJ,EAAiB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBN,MAAvB;AACH,GAJQ,EAIP,CAACA,MAAD,CAJO,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,yBAArB;AAA+C,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAtD;AAAA,6BACI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,WAAW,EAAC,sBAFhB;AAGI,QAAA,KAAK,EAAEP,MAHX;AAII,QAAA,QAAQ,EAAEQ,CAAC,IAAIP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzBQZ,U;;KAAAA,U;AA2BT,eAAeA,UAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport \"./SongLookup.css\"\nimport {Container,Form} from 'react-bootstrap';\nfunction SongLookup({spotify}) {\n   \n  const [search,setSearch] = useState();\n  const [searchResults, setSearchResults] = useState([])\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n        console.log(\"search: \",search);\n    },[search])\n  \n    return (\n        <div className=\"SongLookup\">\n            <h3>Type in a Song, Artist, or Album</h3>\n            <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n                <Form.Control\n                    type=\"search\"\n                    placeholder=\"Search Songs/Artists\"\n                    value={search}\n                    onChange={e => setSearch(e.target.value)}\n                />\n               \n\n            </Container>\n        </div>\n    )\n}\n\nexport default SongLookup\n"]},"metadata":{},"sourceType":"module"}