{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Login from \"./Login\";\nimport Player from \"./Player\";\nimport { getTokenFromURL } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./ServiceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nconst code = function App() {\n  _s();\n\n  //const [token,setToken] = useState(null);\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  const [button, setButton] = useState(0);\n  useEffect(() => {\n    const hash = getTokenFromURL();\n    console.log(token, \"****\");\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      //setToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      }, [token, dispatch]);\n    }\n  });\n\n  const updateButton = () => {\n    let b = button + 1;\n    setButton(b);\n    console.log(button);\n  };\n\n  console.log(\"usererer\", user);\n  console.log(\"usertoken44\", token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateButton,\n      className: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(code, \"m1FFuoeHJvlkL5aZJd9+jsJdmYw=\", false, function () {\n  return [useDataLayerValue];\n});\n\nexport default App;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/App.js"],"names":["React","useEffect","useState","Login","Player","getTokenFromURL","SpotifyWebApi","useDataLayerValue","spotify","code","App","user","token","dispatch","button","setButton","hash","console","log","window","location","_token","access_token","type","setAccessToken","getMe","then","updateButton","b"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA2B,oBAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AACA,MAAMG,IAAI,GACV,SAASC,GAAT,GAAe;AAAA;;AACd;AACA,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAD,EAAcC,QAAd,IAA0BN,iBAAiB,EAAjD;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBb,QAAQ,CAAC,CAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMe,IAAI,GAAGX,eAAe,EAA5B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAkB,MAAlB;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBJ,IAAhB,GAAuB,EAAvB;AAEA,UAAMK,MAAM,GAAGL,IAAI,CAACM,YAApB;;AACA,QAAGD,MAAH,EAAU;AACR;AACAR,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,WAAP;AAAoBX,QAAAA,KAAK,EAACS;AAA1B,OAAD,CAAR;AACAb,MAAAA,OAAO,CAACgB,cAAR,CAAuBH,MAAvB;AAEAb,MAAAA,OAAO,CAACiB,KAAR,GAAgBC,IAAhB,CAAqBf,IAAI,IAAI;AAC3BE,QAAAA,QAAQ,CAAC;AAACU,UAAAA,IAAI,EAAE,UAAP;AAAmBZ,UAAAA,IAAI,EAACA;AAAxB,SAAD,CAAR;AAED,OAHD,EAGE,CAACC,KAAD,EAAQC,QAAR,CAHF;AAID;AAED,GAjBQ,CAAT;;AAmBD,QAAMc,YAAY,GAAG,MAAK;AACxB,QAAIC,CAAC,GAAGd,MAAM,GAAG,CAAjB;AACAC,IAAAA,SAAS,CAACa,CAAD,CAAT;AACEX,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACH,GAJD;;AAKCG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,IAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BN,KAA1B;AAEC,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAGe,YAAlB;AAA+B,MAAA,SAAS,EAAG;AAA3C;AAAA;AAAA;AAAA;AAAA,YADA,EAGEf,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAH9C;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CA3CD;;GAAMC,I;UAG2BF,iB;;;AA0CjC,eAAeG,GAAf","sourcesContent":["\nimport React, {useEffect,useState} from \"react\";\nimport './App.css';\nimport Login from \"./Login\";\nimport Player from \"./Player\";\nimport { getTokenFromURL } from \"./spotify\";\nimport SpotifyWebApi  from \"spotify-web-api-js\";\nimport {useDataLayerValue} from \"./ServiceProvider\"\n\nconst spotify = new SpotifyWebApi();\nconst code = \nfunction App() {\n //const [token,setToken] = useState(null);\n const [{user,token},dispatch] = useDataLayerValue();\n const [button,setButton] = useState(0);\n \n useEffect(()=>{\n  const hash = getTokenFromURL();\n  console.log(token,\"****\");\n  window.location.hash = \"\";\n\n  const _token = hash.access_token;\n  if(_token){\n    //setToken(_token);\n    dispatch({type: \"SET_TOKEN\", token:_token, })\n    spotify.setAccessToken(_token);\n    \n    spotify.getMe().then(user => {\n      dispatch({type: 'SET_USER', user:user,})\n      \n    },[token, dispatch])\n  }\n  \n });\n \nconst updateButton = () =>{\n  let b = button + 1;\n  setButton(b);\n    console.log(button);\n};\n console.log(\"usererer\", user);\n console.log(\"usertoken44\",token);\n \n  return (\n    \n    <div className=\"app\">\n    <button onClick ={updateButton}className = \"button\"></button>\n    {\n      token ? <Player spotify={spotify}></Player>:<Login/>\n    }\n  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}