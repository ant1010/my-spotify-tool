{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/* eslint-disable camelcase */\n\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport { getDevices, getPlaybackState, next, pause, play, previous, seek, setDevice, setVolume } from './spotify';\nimport { getMergedStyles } from './styles';\nimport { getLocale, getSpotifyURIType, isEqualArray, loadSpotifyPlayer, parseVolume, round, STATUS, TYPE, validateURI } from './utils';\n\nvar SpotifyWebPlayer =\n/** @class */\nfunction (_super) {\n  __extends(SpotifyWebPlayer, _super);\n\n  function SpotifyWebPlayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    Object.defineProperty(_this, \"isActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"emptyTrack\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        artists: [],\n        durationMs: 0,\n        id: '',\n        image: '',\n        name: '',\n        uri: ''\n      }\n    });\n    Object.defineProperty(_this, \"getPlayOptions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: memoize(function (data) {\n        var playOptions = {\n          context_uri: undefined,\n          uris: undefined\n        };\n        /* istanbul ignore else */\n\n        if (data) {\n          var ids = Array.isArray(data) ? data : [data];\n\n          if (!ids.every(function (d) {\n            return validateURI(d);\n          })) {\n            // eslint-disable-next-line no-console\n            console.error('Invalid URI');\n            return playOptions;\n          }\n\n          if (ids.some(function (d) {\n            return getSpotifyURIType(d) === 'track';\n          })) {\n            if (!ids.every(function (d) {\n              return getSpotifyURIType(d) === 'track';\n            })) {\n              // eslint-disable-next-line no-console\n              console.warn(\"You can't mix tracks URIs with other types\");\n            }\n\n            playOptions.uris = ids.filter(function (d) {\n              return validateURI(d) && getSpotifyURIType(d) === 'track';\n            });\n          } else {\n            if (ids.length > 1) {\n              // eslint-disable-next-line no-console\n              console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n            } // eslint-disable-next-line prefer-destructuring\n\n\n            playOptions.context_uri = ids[0];\n          }\n        }\n\n        return playOptions;\n      })\n    });\n    Object.defineProperty(_this, \"hasNewToken\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"player\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerProgressInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerSyncInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"ref\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: React.createRef()\n    });\n    Object.defineProperty(_this, \"seekUpdateInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(_this, \"styles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"syncTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"handleChangeRange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (position) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var track, _a, callback, token, progress, percentage, state, error_1;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                track = this.state.track;\n                _a = this.props, callback = _a.callback, token = _a.token;\n                progress = 0;\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 8,, 9]);\n\n                percentage = position / 100;\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 3];\n                progress = Math.round(track.durationMs * percentage);\n                return [4\n                /*yield*/\n                , seek(token, progress)];\n\n              case 2:\n                _b.sent();\n\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3\n                /*break*/\n                , 7];\n\n              case 3:\n                if (!this.player) return [3\n                /*break*/\n                , 7];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 4:\n                state = _b.sent();\n                if (!state) return [3\n                /*break*/\n                , 6];\n                progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n                return [4\n                /*yield*/\n                , this.player.seek(progress)];\n\n              case 5:\n                _b.sent();\n\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3\n                /*break*/\n                , 7];\n\n              case 6:\n                this.updateState({\n                  position: 0\n                });\n                _b.label = 7;\n\n              case 7:\n                if (callback) {\n                  callback(__assign(__assign({}, this.state), {\n                    type: TYPE.PROGRESS\n                  }));\n                }\n\n                return [3\n                /*break*/\n                , 9];\n\n              case 8:\n                error_1 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickTogglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isActive, error_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                isActive = this.state.isActive;\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.togglePlay(!this.isExternalPlayer && !isActive)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                error_2 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_2);\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickPrevious\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_3;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , previous(token)];\n\n              case 1:\n                _a.sent();\n\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.previousTrack()];\n\n              case 3:\n                _a.sent();\n\n                _a.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_3 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_3);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickNext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_4;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , next(token)];\n\n              case 1:\n                _a.sent();\n\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.nextTrack()];\n\n              case 3:\n                _a.sent();\n\n                _a.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_4 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_4);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (deviceId) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isUnsupported, _a, autoPlay, persistDeviceSelection, token, player, error_5;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                isUnsupported = this.state.isUnsupported;\n                _a = this.props, autoPlay = _a.autoPlay, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n                this.updateState({\n                  currentDeviceId: deviceId\n                });\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , setDevice(token, deviceId)];\n\n              case 2:\n                _b.sent();\n                /* istanbul ignore else */\n\n\n                if (persistDeviceSelection) {\n                  sessionStorage.setItem('rswpDeviceId', deviceId);\n                }\n\n                if (!isUnsupported) return [3\n                /*break*/\n                , 6];\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 3:\n                _b.sent();\n\n                return [4\n                /*yield*/\n                , getPlaybackState(token)];\n\n              case 4:\n                player = _b.sent();\n                if (!(player && !player.is_playing && autoPlay)) return [3\n                /*break*/\n                , 6];\n                return [4\n                /*yield*/\n                , this.togglePlay(true)];\n\n              case 5:\n                _b.sent();\n\n                _b.label = 6;\n\n              case 6:\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                error_5 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_5);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleFavoriteStatusChange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (status) {\n        var isSaved = _this.state.isSaved;\n\n        _this.updateState({\n          isSaved: status\n        });\n        /* istanbul ignore else */\n\n\n        if (isSaved !== status) {\n          _this.handleCallback(__assign(__assign({}, _this.state), {\n            isSaved: status,\n            type: TYPE.FAVORITE\n          }));\n        }\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerErrors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (type, message) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var status, isPlaybackError, isInitializationError, nextStatus, devices, token;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                status = this.state.status;\n                isPlaybackError = type === 'playback_error';\n                isInitializationError = type === 'initialization_error';\n                nextStatus = status;\n                devices = [];\n                if (!(this.player && !isPlaybackError)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.player.disconnect()];\n\n              case 1:\n                _b.sent();\n\n                _b.label = 2;\n\n              case 2:\n                if (!isInitializationError) return [3\n                /*break*/\n                , 4];\n                nextStatus = STATUS.UNSUPPORTED;\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , getDevices(token)];\n\n              case 3:\n                _a = _b.sent().devices, devices = _a === void 0 ? [] : _a;\n                _b.label = 4;\n\n              case 4:\n                if (!isInitializationError && !isPlaybackError) {\n                  nextStatus = STATUS.ERROR;\n                }\n\n                this.updateState({\n                  devices: devices,\n                  error: message,\n                  errorType: type,\n                  isInitializing: false,\n                  isUnsupported: isInitializationError,\n                  status: nextStatus\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerStateChanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var paused, position, _a, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _c.trys.push([0, 6,, 7]);\n\n                if (!state) return [3\n                /*break*/\n                , 2];\n                paused = state.paused, position = state.position, _a = state.track_window, _b = _a.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a.next_tracks, previous_tracks = _a.previous_tracks;\n                isPlaying = !paused;\n                return [4\n                /*yield*/\n                , this.player.getVolume()];\n\n              case 1:\n                volume = _c.sent();\n                track = {\n                  artists: artists,\n                  durationMs: duration_ms,\n                  id: id,\n                  image: this.setAlbumImage(album),\n                  name: name_1,\n                  uri: uri\n                };\n                trackState = void 0;\n\n                if (position === 0) {\n                  trackState = {\n                    nextTracks: next_tracks,\n                    position: 0,\n                    previousTracks: previous_tracks,\n                    track: track\n                  };\n                }\n\n                this.updateState(__assign({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: isPlaying,\n                  progressMs: position,\n                  volume: round(volume)\n                }, trackState));\n                return [3\n                /*break*/\n                , 5];\n\n              case 2:\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 3:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 4:\n                this.updateState({\n                  isActive: false,\n                  isPlaying: false,\n                  nextTracks: [],\n                  position: 0,\n                  previousTracks: [],\n                  track: {\n                    artists: '',\n                    durationMs: 0,\n                    id: '',\n                    image: '',\n                    name: '',\n                    uri: ''\n                  }\n                });\n                _c.label = 5;\n\n              case 5:\n                return [3\n                /*break*/\n                , 7];\n\n              case 6:\n                error_6 = _c.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_6);\n                return [3\n                /*break*/\n                , 7];\n\n              case 7:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerStatus\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (_a) {\n        var device_id = _a.device_id;\n        return __awaiter(_this, void 0, void 0, function () {\n          var _b, currentDeviceId, devices;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.initializeDevices(device_id)];\n\n              case 1:\n                _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;\n                this.updateState({\n                  currentDeviceId: currentDeviceId,\n                  deviceId: device_id,\n                  devices: devices,\n                  isInitializing: false,\n                  status: device_id ? STATUS.READY : STATUS.IDLE\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleToggleMagnify\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var magnifySliderOnHover = _this.props.magnifySliderOnHover;\n\n        if (magnifySliderOnHover) {\n          _this.updateState(function (previousState) {\n            return {\n              isMagnified: !previousState.isMagnified\n            };\n          });\n        }\n      }\n    });\n    Object.defineProperty(_this, \"initializePlayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var volume = _this.state.volume;\n        var _a = _this.props,\n            _b = _a.name,\n            name = _b === void 0 ? 'Spotify Web Player' : _b,\n            token = _a.token;\n\n        if (!window.Spotify) {\n          return;\n        }\n\n        _this.updateState({\n          isInitializing: true\n        });\n\n        _this.player = new window.Spotify.Player({\n          getOAuthToken: function (callback) {\n            callback(token);\n          },\n          name: name,\n          volume: volume\n        });\n\n        _this.player.addListener('ready', _this.handlePlayerStatus);\n\n        _this.player.addListener('not_ready', _this.handlePlayerStatus);\n\n        _this.player.addListener('player_state_changed', _this.handlePlayerStateChanges);\n\n        _this.player.addListener('initialization_error', function (error) {\n          return _this.handlePlayerErrors('initialization_error', error.message);\n        });\n\n        _this.player.addListener('authentication_error', function (error) {\n          return _this.handlePlayerErrors('authentication_error', error.message);\n        });\n\n        _this.player.addListener('account_error', function (error) {\n          return _this.handlePlayerErrors('account_error', error.message);\n        });\n\n        _this.player.addListener('playback_error', function (error) {\n          return _this.handlePlayerErrors('playback_error', error.message);\n        });\n\n        _this.player.connect();\n      }\n    }); // eslint-disable-next-line class-methods-use-this\n\n    Object.defineProperty(_this, \"setAlbumImage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (album) {\n        var width = Math.min.apply(Math, __spreadArray([], __read(album.images.map(function (d) {\n          return d.width || 0;\n        })), false));\n        var thumb = album.images.find(function (d) {\n          return d.width === width;\n        }) || {};\n        return thumb.url;\n      }\n    });\n    Object.defineProperty(_this, \"setExternalDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (id) {\n        _this.updateState({\n          currentDeviceId: id,\n          isPlaying: true\n        });\n      }\n    });\n    Object.defineProperty(_this, \"setVolume\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (volume) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                token = this.props.token;\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 3];\n                return [4\n                /*yield*/\n                , setVolume(token, Math.round(volume * 100))];\n\n              case 1:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 3:\n                if (!this.player) return [3\n                /*break*/\n                , 5];\n                return [4\n                /*yield*/\n                , this.player.setVolume(volume)];\n\n              case 4:\n                _a.sent();\n\n                _a.label = 5;\n\n              case 5:\n                this.updateState({\n                  volume: volume\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"syncDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var deviceId, token, player, track, error_7, state;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                deviceId = this.state.deviceId;\n                token = this.props.token;\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , getPlaybackState(token)];\n\n              case 2:\n                player = _a.sent();\n                track = this.emptyTrack;\n\n                if (!player) {\n                  throw new Error('No player');\n                }\n                /* istanbul ignore else */\n\n\n                if (player.item) {\n                  track = {\n                    artists: player.item.artists,\n                    durationMs: player.item.duration_ms,\n                    id: player.item.id,\n                    image: this.setAlbumImage(player.item.album),\n                    name: player.item.name,\n                    uri: player.item.uri\n                  };\n                }\n\n                this.updateState({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: player.is_playing,\n                  nextTracks: [],\n                  previousTracks: [],\n                  progressMs: player.item ? player.progress_ms : 0,\n                  status: STATUS.READY,\n                  track: track,\n                  volume: parseVolume(player.device.volume_percent)\n                });\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                error_7 = _a.sent();\n                state = {\n                  isActive: false,\n                  isPlaying: false,\n                  position: 0,\n                  track: this.emptyTrack\n                };\n\n                if (deviceId) {\n                  this.updateState(__assign({\n                    currentDeviceId: deviceId\n                  }, state));\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                this.updateState(__assign({\n                  error: error_7.message,\n                  errorType: 'player_status',\n                  status: STATUS.ERROR\n                }, state));\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"toggleOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, _b, offset, token, uris;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                if (!(isPlaying && typeof offset === 'number' && Array.isArray(uris))) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , play(token, {\n                  deviceId: currentDeviceId,\n                  offset: offset,\n                  uris: uris\n                })];\n\n              case 1:\n                _c.sent();\n\n                _c.label = 2;\n\n              case 2:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"togglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (init) {\n        if (init === void 0) {\n          init = false;\n        }\n\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;\n\n          var _this = this;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying, needsUpdate = _a.needsUpdate;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                shouldInitialize = init || needsUpdate;\n                playOptions = this.getPlayOptions(uris);\n                _c.label = 1;\n\n              case 1:\n                _c.trys.push([1, 13,, 14]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 6];\n                if (!!isPlaying) return [3\n                /*break*/\n                , 3];\n                return [4\n                /*yield*/\n                , play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n\n              case 2:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 3:\n                return [4\n                /*yield*/\n                , pause(token)];\n\n              case 4:\n                _c.sent();\n\n                this.updateState({\n                  isPlaying: false\n                });\n                _c.label = 5;\n\n              case 5:\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 12];\n\n              case 6:\n                if (!this.player) return [3\n                /*break*/\n                , 12];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 7:\n                playerState = _c.sent();\n                return [4\n                /*yield*/\n                , this.player.activateElement()];\n\n              case 8:\n                _c.sent();\n\n                if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused)) return [3\n                /*break*/\n                , 10];\n                return [4\n                /*yield*/\n                , play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n\n              case 9:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 12];\n\n              case 10:\n                return [4\n                /*yield*/\n                , this.player.togglePlay()];\n\n              case 11:\n                _c.sent();\n\n                _c.label = 12;\n\n              case 12:\n                if (needsUpdate) {\n                  this.updateState({\n                    needsUpdate: false\n                  });\n                }\n\n                return [3\n                /*break*/\n                , 14];\n\n              case 13:\n                error_8 = _c.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_8);\n                return [3\n                /*break*/\n                , 14];\n\n              case 14:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"updateSeekBar\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, progressMs, track, position, state, progress, position, error_9;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                _a = this.state, progressMs = _a.progressMs, track = _a.track;\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                position = progressMs / track.durationMs;\n                position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n                this.updateState({\n                  position: position,\n                  progressMs: progressMs + this.seekUpdateInterval\n                });\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 3:\n                state = _b.sent();\n                /* istanbul ignore else */\n\n                if (state) {\n                  progress = state.position;\n                  position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));\n                  this.updateState({\n                    position: position,\n                    progressMs: progress + this.seekUpdateInterval\n                  });\n                }\n\n                _b.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_9 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_9);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"updateState\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        if (state === void 0) {\n          state = {};\n        }\n\n        if (!_this.isActive) {\n          return;\n        }\n\n        _this.setState(state);\n      }\n    });\n    _this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: _this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1\n    };\n    _this.styles = getMergedStyles(props.styles);\n    return _this;\n  }\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidMount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, function () {\n        var _b, top;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              this.isActive = true;\n              _b = (((_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;\n              this.updateState({\n                playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n                status: STATUS.INITIALIZING\n              });\n\n              if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n              } else {\n                this.initializePlayer();\n              }\n\n              return [4\n              /*yield*/\n              , loadSpotifyPlayer()];\n\n            case 1:\n              _c.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidUpdate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (previousProps, previousState) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;\n\n        var _this = this;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, error = _a.error, isInitializing = _a.isInitializing, isPlaying = _a.isPlaying, status = _a.status, track = _a.track;\n              _b = this.props, autoPlay = _b.autoPlay, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;\n              isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n              changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;\n              playOptions = this.getPlayOptions(uris);\n              canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n              shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));\n              if (!(canPlay && shouldPlay)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, playOptions))];\n\n            case 1:\n              _c.sent();\n              /* istanbul ignore else */\n\n\n              if (!isPlaying) {\n                this.updateState({\n                  isPlaying: true\n                });\n              }\n\n              if (this.isExternalPlayer) {\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 600);\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              if (changedURIs && !isPlaying) {\n                this.updateState({\n                  needsUpdate: true\n                });\n              }\n\n              _c.label = 3;\n\n            case 3:\n              if (previousState.status !== status) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.STATUS\n                }));\n              }\n\n              if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId)) return [3\n              /*break*/\n              , 6];\n\n              if (!isReady) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.DEVICE\n                }));\n              }\n\n              return [4\n              /*yield*/\n              , this.toggleSyncInterval(this.isExternalPlayer)];\n\n            case 4:\n              _c.sent();\n\n              return [4\n              /*yield*/\n              , this.updateSeekBar()];\n\n            case 5:\n              _c.sent();\n\n              _c.label = 6;\n\n            case 6:\n              if (previousState.track.id !== track.id && track.id) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.TRACK\n                }));\n\n                if (showSaveIcon) {\n                  this.updateState({\n                    isSaved: false\n                  });\n                }\n              }\n\n              if (!(previousState.isPlaying !== isPlaying)) return [3\n              /*break*/\n              , 8];\n              this.toggleProgressBar();\n              return [4\n              /*yield*/\n              , this.toggleSyncInterval(this.isExternalPlayer)];\n\n            case 7:\n              _c.sent();\n\n              this.handleCallback(__assign(__assign({}, this.state), {\n                type: TYPE.PLAYER\n              }));\n              _c.label = 8;\n\n            case 8:\n              if (token && previousProps.token !== token) {\n                this.hasNewToken = true;\n\n                if (!isInitializing) {\n                  this.initializePlayer();\n                } else {\n                  this.hasNewToken = true;\n                }\n              }\n\n              if (!(previousProps.play !== playProp && playProp !== isPlaying)) return [3\n              /*break*/\n              , 10];\n              return [4\n              /*yield*/\n              , this.togglePlay(!track.id)];\n\n            case 9:\n              _c.sent();\n\n              _c.label = 10;\n\n            case 10:\n              if (!(previousProps.offset !== offset)) return [3\n              /*break*/\n              , 12];\n              return [4\n              /*yield*/\n              , this.toggleOffset()];\n\n            case 11:\n              _c.sent();\n\n              _c.label = 12;\n\n            case 12:\n              if (!(previousState.isInitializing && !isInitializing)) return [3\n              /*break*/\n              , 14];\n\n              if (error === 'authentication_error' && this.hasNewToken) {\n                this.hasNewToken = false;\n                this.initializePlayer();\n              }\n\n              if (!(syncExternalDevice && !uris)) return [3\n              /*break*/\n              , 14];\n              return [4\n              /*yield*/\n              , getPlaybackState(token)];\n\n            case 13:\n              player = _c.sent();\n              /* istanbul ignore else */\n\n              if (player && player.is_playing && player.device.id !== deviceId) {\n                this.setExternalDevice(player.device.id);\n              }\n\n              _c.label = 14;\n\n            case 14:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentWillUnmount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.isActive = false;\n              if (!this.player) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.player.disconnect()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              clearInterval(this.playerSyncInterval);\n              clearInterval(this.playerProgressInterval);\n              clearTimeout(this.syncTimeout);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"isExternalPlayer\", {\n    get: function () {\n      var _a = this.state,\n          currentDeviceId = _a.currentDeviceId,\n          deviceId = _a.deviceId,\n          status = _a.status;\n      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"handleCallback\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (state) {\n      var callback = this.props.callback;\n\n      if (callback) {\n        callback(state);\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"initializeDevices\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.props, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n              return [4\n              /*yield*/\n              , getDevices(token)];\n\n            case 1:\n              devices = _b.sent().devices;\n              currentDeviceId = id;\n\n              if (persistDeviceSelection) {\n                savedDeviceId_1 = sessionStorage.getItem('rswpDeviceId');\n                /* istanbul ignore else */\n\n                if (!savedDeviceId_1 || !devices.some(function (d) {\n                  return d.id === savedDeviceId_1;\n                })) {\n                  sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n                } else {\n                  currentDeviceId = savedDeviceId_1;\n                }\n              }\n\n              return [2\n              /*return*/\n              , {\n                currentDeviceId: currentDeviceId,\n                devices: devices\n              }];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleSyncInterval\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (shouldSync) {\n      return __awaiter(this, void 0, void 0, function () {\n        var syncExternalDeviceInterval, error_10;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n\n              if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , this.syncDevice()];\n\n            case 2:\n              _a.sent();\n\n              clearInterval(this.playerSyncInterval);\n              this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1000);\n              _a.label = 3;\n\n            case 3:\n              if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n                clearInterval(this.playerSyncInterval);\n                this.playerSyncInterval = undefined;\n              }\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              error_10 = _a.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_10);\n              return [3\n              /*break*/\n              , 5];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleProgressBar\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var isPlaying = this.state.isPlaying;\n      /* istanbul ignore else */\n\n      if (isPlaying) {\n        /* istanbul ignore else */\n        if (!this.playerProgressInterval) {\n          this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);\n        }\n      } else if (this.playerProgressInterval) {\n        clearInterval(this.playerProgressInterval);\n        this.playerProgressInterval = undefined;\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.state,\n          currentDeviceId = _a.currentDeviceId,\n          deviceId = _a.deviceId,\n          devices = _a.devices,\n          error = _a.error,\n          errorType = _a.errorType,\n          isActive = _a.isActive,\n          isMagnified = _a.isMagnified,\n          isPlaying = _a.isPlaying,\n          isUnsupported = _a.isUnsupported,\n          nextTracks = _a.nextTracks,\n          playerPosition = _a.playerPosition,\n          position = _a.position,\n          previousTracks = _a.previousTracks,\n          status = _a.status,\n          track = _a.track,\n          volume = _a.volume;\n      var _b = this.props,\n          locale = _b.locale,\n          name = _b.name,\n          showSaveIcon = _b.showSaveIcon,\n          token = _b.token,\n          updateSavedStatus = _b.updateSavedStatus;\n      var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n      var isPlaybackError = errorType === 'playback_error';\n      var localeMerged = getLocale(locale);\n\n      var output = _jsx(Loader, {\n        styles: this.styles\n      });\n\n      var info;\n\n      if (isPlaybackError) {\n        info = _jsx(\"p\", {\n          children: error\n        });\n      }\n\n      if (isReady) {\n        /* istanbul ignore else */\n        if (!info) {\n          info = _jsx(Info, {\n            isActive: isActive,\n            locale: localeMerged,\n            onFavoriteStatusChange: this.handleFavoriteStatusChange,\n            showSaveIcon: showSaveIcon,\n            styles: this.styles,\n            token: token,\n            track: track,\n            updateSavedStatus: updateSavedStatus\n          });\n        }\n\n        output = _jsxs(_Fragment, {\n          children: [_jsx(\"div\", {\n            children: info\n          }), _jsx(Controls, {\n            isExternalDevice: this.isExternalPlayer,\n            isPlaying: isPlaying,\n            locale: localeMerged,\n            nextTracks: nextTracks,\n            onClickNext: this.handleClickNext,\n            onClickPrevious: this.handleClickPrevious,\n            onClickTogglePlay: this.handleClickTogglePlay,\n            previousTracks: previousTracks,\n            styles: this.styles\n          }), _jsx(Actions, {\n            currentDeviceId: currentDeviceId,\n            deviceId: deviceId,\n            devices: devices,\n            isDevicesOpen: isUnsupported && !deviceId,\n            locale: localeMerged,\n            onClickDevice: this.handleClickDevice,\n            playerPosition: playerPosition,\n            setVolume: this.setVolume,\n            styles: this.styles,\n            volume: volume\n          })]\n        });\n      }\n\n      if (status === STATUS.ERROR) {\n        output = _jsxs(ErrorMessage, __assign({\n          styles: this.styles\n        }, {\n          children: [name, \": \", error]\n        }));\n      }\n\n      return _jsxs(Player, __assign({\n        ref: this.ref,\n        styles: this.styles\n      }, {\n        children: [isReady && _jsx(Slider, {\n          isMagnified: isMagnified,\n          onChangeRange: this.handleChangeRange,\n          onToggleMagnify: this.handleToggleMagnify,\n          position: position,\n          styles: this.styles\n        }), _jsx(Content, __assign({\n          styles: this.styles\n        }, {\n          children: output\n        }))]\n      }));\n    }\n  }); // eslint-disable-next-line react/static-property-placement\n\n  Object.defineProperty(SpotifyWebPlayer, \"defaultProps\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      magnifySliderOnHover: false,\n      name: 'Spotify Web Player',\n      showSaveIcon: false,\n      syncExternalDeviceInterval: 5,\n      syncExternalDevice: false\n    }\n  });\n  return SpotifyWebPlayer;\n}(React.PureComponent);\n\nexport * from './types';\nexport default SpotifyWebPlayer;\nexport { STATUS, TYPE } from './utils';","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/node_modules/react-spotify-web-playback/src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport {\n  getDevices,\n  getPlaybackState,\n  next,\n  pause,\n  play,\n  previous,\n  seek,\n  setDevice,\n  setVolume,\n} from './spotify';\nimport { getMergedStyles } from './styles';\nimport {\n  CallbackState,\n  PlayOptions,\n  Props,\n  SpotifyDevice,\n  SpotifyPlayerCallback,\n  SpotifyPlayerStatus,\n  State,\n  StylesOptions,\n} from './types';\nimport {\n  getLocale,\n  getSpotifyURIType,\n  isEqualArray,\n  loadSpotifyPlayer,\n  parseVolume,\n  round,\n  STATUS,\n  TYPE,\n  validateURI,\n} from './utils';\n\nimport { Spotify } from '../global';\n\nclass SpotifyWebPlayer extends React.PureComponent<Props, State> {\n  private isActive = false;\n  private emptyTrack = {\n    artists: [] as Spotify.Artist[],\n    durationMs: 0,\n    id: '',\n    image: '',\n    name: '',\n    uri: '',\n  };\n\n  private getPlayOptions = memoize((data): PlayOptions => {\n    const playOptions: PlayOptions = {\n      context_uri: undefined,\n      uris: undefined,\n    };\n\n    /* istanbul ignore else */\n    if (data) {\n      const ids = Array.isArray(data) ? data : [data];\n\n      if (!ids.every(d => validateURI(d))) {\n        // eslint-disable-next-line no-console\n        console.error('Invalid URI');\n\n        return playOptions;\n      }\n\n      if (ids.some(d => getSpotifyURIType(d) === 'track')) {\n        if (!ids.every(d => getSpotifyURIType(d) === 'track')) {\n          // eslint-disable-next-line no-console\n          console.warn(\"You can't mix tracks URIs with other types\");\n        }\n\n        playOptions.uris = ids.filter(d => validateURI(d) && getSpotifyURIType(d) === 'track');\n      } else {\n        if (ids.length > 1) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n        }\n\n        // eslint-disable-next-line prefer-destructuring\n        playOptions.context_uri = ids[0];\n      }\n    }\n\n    return playOptions;\n  });\n\n  private hasNewToken = false;\n  private player?: Spotify.Player;\n  private playerProgressInterval?: number;\n  private playerSyncInterval?: number;\n  private ref = React.createRef<HTMLDivElement>();\n  private seekUpdateInterval = 100;\n  private readonly styles: StylesOptions;\n  private syncTimeout?: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1,\n    };\n\n    this.styles = getMergedStyles(props.styles);\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false,\n  };\n\n  public async componentDidMount() {\n    this.isActive = true;\n    const { top = 0 } = this.ref.current?.getBoundingClientRect() || {};\n\n    this.updateState({\n      playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n      status: STATUS.INITIALIZING,\n    });\n\n    if (!window.onSpotifyWebPlaybackSDKReady) {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    } else {\n      this.initializePlayer();\n    }\n\n    await loadSpotifyPlayer();\n  }\n\n  public async componentDidUpdate(previousProps: Props, previousState: State) {\n    const { currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track } =\n      this.state;\n    const {\n      autoPlay,\n      offset,\n      play: playProp,\n      showSaveIcon,\n      syncExternalDevice,\n      token,\n      uris,\n    } = this.props;\n    const isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n    const changedURIs = Array.isArray(uris)\n      ? !isEqualArray(previousProps.uris, uris)\n      : previousProps.uris !== uris;\n    const playOptions = this.getPlayOptions(uris);\n\n    const canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n    const shouldPlay = (changedURIs && isPlaying) || !!(isReady && (autoPlay || playProp));\n\n    if (canPlay && shouldPlay) {\n      await play(token, { deviceId: currentDeviceId, offset, ...playOptions });\n\n      /* istanbul ignore else */\n      if (!isPlaying) {\n        this.updateState({ isPlaying: true });\n      }\n\n      if (this.isExternalPlayer) {\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 600);\n      }\n    } else if (changedURIs && !isPlaying) {\n      this.updateState({ needsUpdate: true });\n    }\n\n    if (previousState.status !== status) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.STATUS,\n      });\n    }\n\n    if (previousState.currentDeviceId !== currentDeviceId && currentDeviceId) {\n      if (!isReady) {\n        this.handleCallback({\n          ...this.state,\n          type: TYPE.DEVICE,\n        });\n      }\n\n      await this.toggleSyncInterval(this.isExternalPlayer);\n      await this.updateSeekBar();\n    }\n\n    if (previousState.track.id !== track.id && track.id) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.TRACK,\n      });\n\n      if (showSaveIcon) {\n        this.updateState({ isSaved: false });\n      }\n    }\n\n    if (previousState.isPlaying !== isPlaying) {\n      this.toggleProgressBar();\n      await this.toggleSyncInterval(this.isExternalPlayer);\n\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.PLAYER,\n      });\n    }\n\n    if (token && previousProps.token !== token) {\n      this.hasNewToken = true;\n\n      if (!isInitializing) {\n        this.initializePlayer();\n      } else {\n        this.hasNewToken = true;\n      }\n    }\n\n    if (previousProps.play !== playProp && playProp !== isPlaying) {\n      await this.togglePlay(!track.id);\n    }\n\n    if (previousProps.offset !== offset) {\n      await this.toggleOffset();\n    }\n\n    if (previousState.isInitializing && !isInitializing) {\n      if (error === 'authentication_error' && this.hasNewToken) {\n        this.hasNewToken = false;\n        this.initializePlayer();\n      }\n\n      if (syncExternalDevice && !uris) {\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        /* istanbul ignore else */\n        if (player && player.is_playing && player.device.id !== deviceId) {\n          this.setExternalDevice(player.device.id);\n        }\n      }\n    }\n  }\n\n  public async componentWillUnmount() {\n    this.isActive = false;\n\n    /* istanbul ignore else */\n    if (this.player) {\n      await this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  }\n\n  private get isExternalPlayer(): boolean {\n    const { currentDeviceId, deviceId, status } = this.state;\n\n    return (currentDeviceId && currentDeviceId !== deviceId) || status === STATUS.UNSUPPORTED;\n  }\n\n  private handleCallback(state: CallbackState): void {\n    const { callback } = this.props;\n\n    if (callback) {\n      callback(state);\n    }\n  }\n\n  private handleChangeRange = async (position: number) => {\n    const { track } = this.state;\n    const { callback, token } = this.props;\n    let progress = 0;\n\n    try {\n      const percentage = position / 100;\n\n      if (this.isExternalPlayer) {\n        progress = Math.round(track.durationMs * percentage);\n        await seek(token, progress);\n\n        this.updateState({\n          position,\n          progressMs: progress,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        if (state) {\n          progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n          await this.player.seek(progress);\n\n          this.updateState({\n            position,\n            progressMs: progress,\n          });\n        } else {\n          this.updateState({ position: 0 });\n        }\n      }\n\n      if (callback) {\n        callback({\n          ...this.state,\n          type: TYPE.PROGRESS,\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickTogglePlay = async () => {\n    const { isActive } = this.state;\n\n    try {\n      await this.togglePlay(!this.isExternalPlayer && !isActive);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickPrevious = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await previous(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.previousTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickNext = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await next(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.nextTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickDevice = async (deviceId: string) => {\n    const { isUnsupported } = this.state;\n    const { autoPlay, persistDeviceSelection, token } = this.props;\n\n    this.updateState({ currentDeviceId: deviceId });\n\n    try {\n      await setDevice(token, deviceId);\n\n      /* istanbul ignore else */\n      if (persistDeviceSelection) {\n        sessionStorage.setItem('rswpDeviceId', deviceId);\n      }\n\n      /* istanbul ignore else */\n      if (isUnsupported) {\n        await this.syncDevice();\n\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        if (player && !player.is_playing && autoPlay) {\n          await this.togglePlay(true);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleFavoriteStatusChange = (status: boolean) => {\n    const { isSaved } = this.state;\n\n    this.updateState({ isSaved: status });\n\n    /* istanbul ignore else */\n    if (isSaved !== status) {\n      this.handleCallback({\n        ...this.state,\n        isSaved: status,\n        type: TYPE.FAVORITE,\n      });\n    }\n  };\n\n  private handlePlayerErrors = async (type: string, message: string) => {\n    const { status } = this.state;\n    const isPlaybackError = type === 'playback_error';\n    const isInitializationError = type === 'initialization_error';\n    let nextStatus = status;\n    let devices: SpotifyDevice[] = [];\n\n    if (this.player && !isPlaybackError) {\n      await this.player.disconnect();\n    }\n\n    if (isInitializationError) {\n      nextStatus = STATUS.UNSUPPORTED;\n\n      const { token } = this.props;\n\n      ({ devices = [] } = await getDevices(token));\n    }\n\n    if (!isInitializationError && !isPlaybackError) {\n      nextStatus = STATUS.ERROR;\n    }\n\n    this.updateState({\n      devices,\n      error: message,\n      errorType: type,\n      isInitializing: false,\n      isUnsupported: isInitializationError,\n      status: nextStatus,\n    });\n  };\n\n  private handlePlayerStateChanges = async (state: Spotify.PlaybackState) => {\n    try {\n      /* istanbul ignore else */\n      if (state) {\n        const {\n          paused,\n          position,\n          track_window: {\n            current_track: { album, artists, duration_ms, id, name, uri },\n            next_tracks,\n            previous_tracks,\n          },\n        } = state;\n\n        const isPlaying = !paused;\n        const volume = await this.player!.getVolume();\n        const track = {\n          artists,\n          durationMs: duration_ms,\n          id,\n          image: this.setAlbumImage(album),\n          name,\n          uri,\n        };\n        let trackState;\n\n        if (position === 0) {\n          trackState = {\n            nextTracks: next_tracks,\n            position: 0,\n            previousTracks: previous_tracks,\n            track,\n          };\n        }\n\n        this.updateState({\n          error: '',\n          errorType: '',\n          isActive: true,\n          isPlaying,\n          progressMs: position,\n          volume: round(volume),\n          ...trackState,\n        });\n      } else if (this.isExternalPlayer) {\n        await this.syncDevice();\n      } else {\n        this.updateState({\n          isActive: false,\n          isPlaying: false,\n          nextTracks: [],\n          position: 0,\n          previousTracks: [],\n          track: {\n            artists: '',\n            durationMs: 0,\n            id: '',\n            image: '',\n            name: '',\n            uri: '',\n          },\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handlePlayerStatus = async ({ device_id }: Spotify.WebPlaybackInstance) => {\n    const { currentDeviceId, devices } = await this.initializeDevices(device_id);\n\n    this.updateState({\n      currentDeviceId,\n      deviceId: device_id,\n      devices,\n      isInitializing: false,\n      status: device_id ? STATUS.READY : STATUS.IDLE,\n    });\n  };\n\n  private handleToggleMagnify = () => {\n    const { magnifySliderOnHover } = this.props;\n\n    if (magnifySliderOnHover) {\n      this.updateState((previousState: State) => {\n        return { isMagnified: !previousState.isMagnified };\n      });\n    }\n  };\n\n  private async initializeDevices(id: string) {\n    const { persistDeviceSelection, token } = this.props;\n    const { devices } = await getDevices(token);\n    let currentDeviceId = id;\n\n    if (persistDeviceSelection) {\n      const savedDeviceId = sessionStorage.getItem('rswpDeviceId');\n\n      /* istanbul ignore else */\n      if (!savedDeviceId || !devices.some((d: SpotifyDevice) => d.id === savedDeviceId)) {\n        sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n      } else {\n        currentDeviceId = savedDeviceId;\n      }\n    }\n\n    return { currentDeviceId, devices };\n  }\n\n  private initializePlayer = () => {\n    const { volume } = this.state;\n    const { name = 'Spotify Web Player', token } = this.props;\n\n    if (!window.Spotify) {\n      return;\n    }\n\n    this.updateState({ isInitializing: true });\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: (callback: SpotifyPlayerCallback) => {\n        callback(token);\n      },\n      name,\n      volume,\n    });\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    this.player.addListener('initialization_error', error =>\n      this.handlePlayerErrors('initialization_error', error.message),\n    );\n    this.player.addListener('authentication_error', error =>\n      this.handlePlayerErrors('authentication_error', error.message),\n    );\n    this.player.addListener('account_error', error =>\n      this.handlePlayerErrors('account_error', error.message),\n    );\n    this.player.addListener('playback_error', error =>\n      this.handlePlayerErrors('playback_error', error.message),\n    );\n\n    this.player.connect();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private setAlbumImage = (album: Spotify.Album): string => {\n    const width = Math.min(...album.images.map(d => d.width || 0));\n    const thumb: Spotify.Image = album.images.find(d => d.width === width) || ({} as Spotify.Image);\n\n    return thumb.url;\n  };\n\n  private setExternalDevice = (id: string) => {\n    this.updateState({ currentDeviceId: id, isPlaying: true });\n  };\n\n  private setVolume = async (volume: number) => {\n    const { token } = this.props;\n\n    /* istanbul ignore else */\n    if (this.isExternalPlayer) {\n      await setVolume(token, Math.round(volume * 100));\n      await this.syncDevice();\n    } else if (this.player) {\n      await this.player.setVolume(volume);\n    }\n\n    this.updateState({ volume });\n  };\n\n  private syncDevice = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { deviceId } = this.state;\n    const { token } = this.props;\n\n    try {\n      const player: SpotifyPlayerStatus = await getPlaybackState(token);\n      let track = this.emptyTrack;\n\n      if (!player) {\n        throw new Error('No player');\n      }\n\n      /* istanbul ignore else */\n      if (player.item) {\n        track = {\n          artists: player.item.artists,\n          durationMs: player.item.duration_ms,\n          id: player.item.id,\n          image: this.setAlbumImage(player.item.album),\n          name: player.item.name,\n          uri: player.item.uri,\n        };\n      }\n\n      this.updateState({\n        error: '',\n        errorType: '',\n        isActive: true,\n        isPlaying: player.is_playing,\n        nextTracks: [],\n        previousTracks: [],\n        progressMs: player.item ? player.progress_ms : 0,\n        status: STATUS.READY,\n        track,\n        volume: parseVolume(player.device.volume_percent),\n      });\n    } catch (error: any) {\n      const state = {\n        isActive: false,\n        isPlaying: false,\n        position: 0,\n        track: this.emptyTrack,\n      };\n\n      if (deviceId) {\n        this.updateState({\n          currentDeviceId: deviceId,\n          ...state,\n        });\n\n        return;\n      }\n\n      this.updateState({\n        error: error.message,\n        errorType: 'player_status',\n        status: STATUS.ERROR,\n        ...state,\n      });\n    }\n  };\n\n  private async toggleSyncInterval(shouldSync: boolean) {\n    const { syncExternalDeviceInterval } = this.props;\n\n    try {\n      if (this.isExternalPlayer && shouldSync && !this.playerSyncInterval) {\n        await this.syncDevice();\n\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = window.setInterval(\n          this.syncDevice,\n          syncExternalDeviceInterval! * 1000,\n        );\n      }\n\n      if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = undefined;\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  private toggleProgressBar() {\n    const { isPlaying } = this.state;\n\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(\n          this.updateSeekBar,\n          this.seekUpdateInterval,\n        );\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  }\n\n  private toggleOffset = async () => {\n    const { currentDeviceId, isPlaying } = this.state;\n    const { offset, token, uris } = this.props;\n\n    if (isPlaying && typeof offset === 'number' && Array.isArray(uris)) {\n      await play(token, { deviceId: currentDeviceId, offset, uris });\n    }\n  };\n\n  private togglePlay = async (init = false) => {\n    const { currentDeviceId, isPlaying, needsUpdate } = this.state;\n    const { offset, token, uris } = this.props;\n    const shouldInitialize = init || needsUpdate;\n    const playOptions = this.getPlayOptions(uris);\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        if (!isPlaying) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await pause(token);\n\n          this.updateState({ isPlaying: false });\n        }\n\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        const playerState = await this.player.getCurrentState();\n\n        await this.player.activateElement();\n\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (\n          (!playerState && !!(playOptions.context_uri || playOptions.uris)) ||\n          (shouldInitialize && playerState && playerState.paused)\n        ) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await this.player.togglePlay();\n        }\n      }\n\n      if (needsUpdate) {\n        this.updateState({ needsUpdate: false });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateSeekBar = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { progressMs, track } = this.state;\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        let position = progressMs / track.durationMs;\n\n        position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n\n        this.updateState({\n          position,\n          progressMs: progressMs + this.seekUpdateInterval,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        /* istanbul ignore else */\n        if (state) {\n          const progress = state.position;\n          const position = Number(\n            ((progress / state.track_window.current_track.duration_ms) * 100).toFixed(1),\n          );\n\n          this.updateState({\n            position,\n            progressMs: progress + this.seekUpdateInterval,\n          });\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateState = (state = {}) => {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState(state);\n  };\n\n  public render() {\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      error,\n      errorType,\n      isActive,\n      isMagnified,\n      isPlaying,\n      isUnsupported,\n      nextTracks,\n      playerPosition,\n      position,\n      previousTracks,\n      status,\n      track,\n      volume,\n    } = this.state;\n    const { locale, name, showSaveIcon, token, updateSavedStatus } = this.props;\n    const isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    const isPlaybackError = errorType === 'playback_error';\n    const localeMerged = getLocale(locale);\n\n    let output = <Loader styles={this.styles!} />;\n    let info;\n\n    if (isPlaybackError) {\n      info = <p>{error}</p>;\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = (\n          <Info\n            isActive={isActive}\n            locale={localeMerged}\n            onFavoriteStatusChange={this.handleFavoriteStatusChange}\n            showSaveIcon={showSaveIcon!}\n            styles={this.styles}\n            token={token}\n            track={track}\n            updateSavedStatus={updateSavedStatus}\n          />\n        );\n      }\n\n      output = (\n        <>\n          <div>{info}</div>\n          <Controls\n            isExternalDevice={this.isExternalPlayer}\n            isPlaying={isPlaying}\n            locale={localeMerged}\n            nextTracks={nextTracks}\n            onClickNext={this.handleClickNext}\n            onClickPrevious={this.handleClickPrevious}\n            onClickTogglePlay={this.handleClickTogglePlay}\n            previousTracks={previousTracks}\n            styles={this.styles}\n          />\n          <Actions\n            currentDeviceId={currentDeviceId}\n            deviceId={deviceId}\n            devices={devices}\n            isDevicesOpen={isUnsupported && !deviceId}\n            locale={localeMerged}\n            onClickDevice={this.handleClickDevice}\n            playerPosition={playerPosition}\n            setVolume={this.setVolume}\n            styles={this.styles}\n            volume={volume}\n          />\n        </>\n      );\n    }\n\n    if (status === STATUS.ERROR) {\n      output = (\n        <ErrorMessage styles={this.styles}>\n          {name}: {error}\n        </ErrorMessage>\n      );\n    }\n\n    return (\n      <Player ref={this.ref} styles={this.styles}>\n        {isReady && (\n          <Slider\n            isMagnified={isMagnified}\n            onChangeRange={this.handleChangeRange}\n            onToggleMagnify={this.handleToggleMagnify}\n            position={position}\n            styles={this.styles!}\n          />\n        )}\n        <Content styles={this.styles}>{output}</Content>\n      </Player>\n    );\n  }\n}\n\nexport * from './types';\n\nexport default SpotifyWebPlayer;\n\nexport { STATUS, TYPE } from './utils';\n"]},"metadata":{},"sourceType":"module"}