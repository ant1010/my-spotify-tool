{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/MassPlaylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./MassPlaylist.css\";\nimport TrackItem from \"./TrackItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MassPlaylist(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  function handleChange(event) {\n    setSearch(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    setSearchResults([]);\n    const searchList = search.split(\"\\n\");\n    console.log(\"list\", searchList);\n    searchList.forEach(track => {\n      spotify.searchTracks(track).then(res => {\n        console.log(res.tracks.items[0]);\n        const element = res.tracks.items[0];\n        const smallestAlbumImage = element.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        const data = {\n          artist: element.artists[0].name,\n          title: element.name,\n          uri: element.uri\n        };\n        setSearchResults(searchResults => [...searchResults, data]);\n      });\n    });\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    console.log(\"searchreasults\", searchResults);\n  }, [searchResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"create mass MassPlaylist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text\",\n        value: search,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackItem, {\n        track: track\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MassPlaylist, \"LTgYVyrwcc/OxagTfuzeEYdwPNk=\");\n\n_c = MassPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MassPlaylist\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/MassPlaylist.js"],"names":["React","useState","useEffect","TrackItem","MassPlaylist","spotify","search","setSearch","searchResults","setSearchResults","handleChange","event","target","value","handleSubmit","searchList","split","console","log","forEach","track","searchTracks","then","res","tracks","items","element","smallestAlbumImage","album","images","reduce","smallest","image","height","data","artist","artists","name","title","uri","preventDefault","overflowY","map"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport \"./MassPlaylist.css\";\nimport TrackItem from \"./TrackItem.js\";\nexport default function MassPlaylist({spotify}) {\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([])\n\n    function handleChange(event)\n    {\n       setSearch(event.target.value);\n       \n    }\n    function handleSubmit(event){\n       setSearchResults([]);\n        const searchList = search.split(\"\\n\");\n        console.log(\"list\",searchList);\n        searchList.forEach((track) => {\n            \n            spotify.searchTracks(track).then(res => {\n                console.log(res.tracks.items[0])\n                const element = res.tracks.items[0];\n                const smallestAlbumImage = element.album.images.reduce(\n                    (smallest, image) => {\n                        if (image.height < smallest.height) return image\n                        return smallest;\n                    },\n                    track.album.images[0]\n                )\n                const data = { \n                  \n                    artist: element.artists[0].name,\n                    title: element.name,\n                    uri: element.uri,\n                   \n                }\n                setSearchResults(searchResults => [...searchResults,data]);\n            })\n        \n        })\n        event.preventDefault();\n    }\n    useEffect(() =>{\n        console.log(\"searchreasults\",searchResults);\n    },[searchResults])\n\n    \n\n    return (\n        <div>\n            <h3>create mass MassPlaylist</h3>\n            <form onSubmit = {handleSubmit}className = \"search\">\n                \n          <textarea className = \"text\" value={search} onChange={handleChange} />\n                \n                <input className = \"submit\"type=\"submit\" value=\"Submit\" />\n            </form>\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n                {searchResults.map(track => (\n                    <TrackItem\n                        track={track}\n                        key={track.uri}\n                        \n                    />\n                ))}\n\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}