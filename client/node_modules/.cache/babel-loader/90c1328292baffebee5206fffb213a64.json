{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nexport function getBaseProps(props) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  return {\n    axis: (_a = props === null || props === void 0 ? void 0 : props.axis) !== null && _a !== void 0 ? _a : 'x',\n    xMax: (_b = props === null || props === void 0 ? void 0 : props.xMax) !== null && _b !== void 0 ? _b : 100,\n    xMin: (_c = props === null || props === void 0 ? void 0 : props.xMin) !== null && _c !== void 0 ? _c : 0,\n    xStep: (_d = props === null || props === void 0 ? void 0 : props.xStep) !== null && _d !== void 0 ? _d : 1,\n    yMax: (_e = props === null || props === void 0 ? void 0 : props.yMax) !== null && _e !== void 0 ? _e : 100,\n    yMin: (_f = props === null || props === void 0 ? void 0 : props.yMin) !== null && _f !== void 0 ? _f : 0,\n    yStep: (_g = props === null || props === void 0 ? void 0 : props.yStep) !== null && _g !== void 0 ? _g : 1\n  };\n}\nexport function getCoordinates(event, lastPosition) {\n  if ('touches' in event) {\n    // eslint-disable-next-line unicorn/prefer-spread\n    var _a = __read(__spreadArray([], __read(Array.from(event.touches)), false), 1),\n        touch = _a[0];\n\n    return {\n      x: touch ? touch.clientX : lastPosition.x,\n      y: touch ? touch.clientY : lastPosition.y\n    };\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nexport function getPosition(position, props, el) {\n  var _a = getBaseProps(props),\n      axis = _a.axis,\n      xMax = _a.xMax,\n      xMin = _a.xMin,\n      xStep = _a.xStep,\n      yMax = _a.yMax,\n      yMin = _a.yMin,\n      yStep = _a.yStep;\n\n  var _b = (el === null || el === void 0 ? void 0 : el.getBoundingClientRect()) || {},\n      _c = _b.height,\n      height = _c === void 0 ? xMax : _c,\n      _d = _b.width,\n      width = _d === void 0 ? yMax : _d;\n\n  var x = position.x,\n      y = position.y;\n  var dx = 0;\n  var dy = 0;\n\n  if (x < 0) {\n    x = 0;\n  }\n\n  if (x > width) {\n    x = width;\n  }\n\n  if (y < 0) {\n    y = 0;\n  }\n\n  if (y > height) {\n    y = height;\n  }\n\n  if (axis === 'x' || axis === 'xy') {\n    dx = Math.round(x / width * (xMax - xMin));\n  }\n\n  if (axis === 'y' || axis === 'xy') {\n    dy = Math.round(y / height * (yMax - yMin));\n  }\n\n  return {\n    x: round(dx, xStep),\n    y: round(dy, yStep)\n  };\n}\n/**\n * Get a normalized value\n */\n\nexport function getNormalizedValue(name, props) {\n  var value = props[name] || 0;\n  var min = name === 'x' ? props.xMin : props.yMin;\n  var max = name === 'x' ? props.xMax : props.yMax;\n\n  if (isNumber(min) && value < min) {\n    return min;\n  }\n\n  if (isNumber(max) && value > max) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Check if the value is a number\n */\n\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Check if the value is undefined\n */\n\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Parse a string into a number or return it if it's already a number\n */\n\nexport function parseNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, 10);\n}\n/**\n *  Remove properties from an object\n */\n\nexport function removeProperties(input) {\n  var filter = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n\n  var output = {};\n\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\nexport function round(value, increment) {\n  return Math.ceil(value / increment) * increment;\n}","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/node_modules/@gilbarbara/react-range-slider/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { PlainObject, RangeSliderPosition, RangeSliderProps } from './types';\n\ntype BaseProps = Required<\n  Pick<RangeSliderProps, 'axis' | 'xMax' | 'xMin' | 'xStep' | 'yMax' | 'yMin' | 'yStep'>\n>;\n\nexport function getBaseProps(props?: RangeSliderProps): BaseProps {\n  return {\n    axis: props?.axis ?? 'x',\n    xMax: props?.xMax ?? 100,\n    xMin: props?.xMin ?? 0,\n    xStep: props?.xStep ?? 1,\n    yMax: props?.yMax ?? 100,\n    yMin: props?.yMin ?? 0,\n    yStep: props?.yStep ?? 1,\n  };\n}\n\nexport function getCoordinates(\n  event: MouseEvent | React.MouseEvent | TouchEvent | React.TouchEvent,\n  lastPosition: RangeSliderPosition,\n): RangeSliderPosition {\n  if ('touches' in event) {\n    // eslint-disable-next-line unicorn/prefer-spread\n    const [touch] = [...Array.from(event.touches)];\n\n    return {\n      x: touch ? touch.clientX : lastPosition.x,\n      y: touch ? touch.clientY : lastPosition.y,\n    };\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY,\n  };\n}\n\nexport function getPosition(\n  position: RangeSliderPosition,\n  props: RangeSliderProps,\n  el: HTMLDivElement | null,\n): RangeSliderPosition {\n  const { axis, xMax, xMin, xStep, yMax, yMin, yStep } = getBaseProps(props);\n  const { height = xMax, width = yMax } = el?.getBoundingClientRect() || {};\n  let { x, y } = position;\n  let dx = 0;\n  let dy = 0;\n\n  if (x < 0) {\n    x = 0;\n  }\n\n  if (x > width) {\n    x = width;\n  }\n\n  if (y < 0) {\n    y = 0;\n  }\n\n  if (y > height) {\n    y = height;\n  }\n\n  if (axis === 'x' || axis === 'xy') {\n    dx = Math.round((x / width) * (xMax - xMin));\n  }\n\n  if (axis === 'y' || axis === 'xy') {\n    dy = Math.round((y / height) * (yMax - yMin));\n  }\n\n  return {\n    x: round(dx, xStep),\n    y: round(dy, yStep),\n  };\n}\n\n/**\n * Get a normalized value\n */\nexport function getNormalizedValue(name: 'x' | 'y', props: RangeSliderProps): number {\n  const value = props[name] || 0;\n  const min = name === 'x' ? props.xMin : props.yMin;\n  const max = name === 'x' ? props.xMax : props.yMax;\n\n  if (isNumber(min) && value < min) {\n    return min;\n  }\n\n  if (isNumber(max) && value > max) {\n    return max;\n  }\n\n  return value;\n}\n\n/**\n * Check if the value is a number\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Check if the value is undefined\n */\nexport function isUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * Parse a string into a number or return it if it's already a number\n */\nexport function parseNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, 10);\n}\n\n/**\n *  Remove properties from an object\n */\nexport function removeProperties<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key as unknown as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function round(value: number, increment: number): number {\n  return Math.ceil(value / increment) * increment;\n}\n"]},"metadata":{},"sourceType":"module"}