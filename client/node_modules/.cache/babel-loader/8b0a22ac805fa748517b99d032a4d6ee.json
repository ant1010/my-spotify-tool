{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Library.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Library.css\";\nimport { useDataLayerValue } from \"./ServiceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Library(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [{\n    library\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    if (library.length != 0) {\n      return;\n    }\n\n    spotify.getMySavedTracks({\n      limit: 20,\n      offset: 1\n    }).then(res => {\n      console.log('Done!', res.items.map(track => {\n        return track.track.album.images;\n      }));\n      dispatch({\n        type: \"SET_LIBRARY\",\n        library: res.items.map(track => {\n          const smallestAlbumImage = track.track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.track.album.images[0]);\n          return {\n            artist: track.track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          };\n        })\n      });\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Library, \"SuJHsnQIrihtkEtil6aZiPHnLbk=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Library.js"],"names":["React","useEffect","useState","useDataLayerValue","Library","spotify","library","dispatch","length","getMySavedTracks","limit","offset","then","res","console","log","items","map","track","album","images","type","smallestAlbumImage","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,eAAP;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AACA,eAAe,SAASC,OAAT,OAA4B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACvC,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAWC,QAAX,IAAuBJ,iBAAiB,EAA9C;AACAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,OAAO,CAACE,MAAR,IAAkB,CAArB,EAAuB;AAAC;AAAO;;AAE/BH,IAAAA,OAAO,CAACI,gBAAR,CAAyB;AACrBC,MAAAA,KAAK,EAAG,EADa;AAErBC,MAAAA,MAAM,EAAE;AAFa,KAAzB,EAIGC,IAJH,CAISC,GAAD,IAAQ;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAAG,CAACG,KAAJ,CAAUC,GAAV,CAAeC,KAAD,IAAU;AAAC,eAAOA,KAAK,CAACA,KAAN,CAAYC,KAAZ,CAAkBC,MAAzB;AAAgC,OAAzD,CAArB;AAEAb,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAC,aAAN;AAAoBf,QAAAA,OAAO,EAACO,GAAG,CAACG,KAAJ,CAAUC,GAAV,CAAeC,KAAD,IAAW;AAC1D,gBAAMI,kBAAkB,GAAGJ,KAAK,CAACA,KAAN,CAAYC,KAAZ,CAAkBC,MAAlB,CAAyBG,MAAzB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjB,gBAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,mBAAOD,QAAP;AACH,WAJsB,EAKvBN,KAAK,CAACA,KAAN,CAAYC,KAAZ,CAAkBC,MAAlB,CAAyB,CAAzB,CALuB,CAA3B;AAQA,iBAAO;AACHO,YAAAA,MAAM,EAAET,KAAK,CAACA,KAAN,CAAYU,OAAZ,CAAoB,CAApB,EAAuBC,IAD5B;AAEHC,YAAAA,KAAK,EAAEZ,KAAK,CAACW,IAFV;AAGHE,YAAAA,GAAG,EAAEb,KAAK,CAACa,GAHR;AAIHC,YAAAA,QAAQ,EAAEV,kBAAkB,CAACW;AAJ1B,WAAP;AAMH,SAfoC;AAA5B,OAAD,CAAR;AAgBD,KAvBH,EAuBK,UAASC,GAAT,EAAc;AACfpB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCmB,GAArC;AACD,KAzBH;AA2BH,GA9BQ,CAAT;AA+BA,sBACI;AAAA,2BACG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCuB9B,O;UACSD,iB;;;KADTC,O","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"./Library.css\"\nimport {useDataLayerValue} from \"./ServiceProvider\"\nexport default function Library({spotify}) {\n    const [{library},dispatch] = useDataLayerValue();\n    useEffect(()=>{\n        if(library.length != 0){return}\n\n        spotify.getMySavedTracks({\n            limit : 20,\n            offset: 1\n          })\n          .then((res)=> {\n            console.log('Done!', res.items.map((track) =>{return track.track.album.images}));\n         \n            dispatch({type:\"SET_LIBRARY\",library:res.items.map((track) => {\n                const smallestAlbumImage = track.track.album.images.reduce(\n                    (smallest, image) => {\n                        if (image.height < smallest.height) return image\n                        return smallest;\n                    },\n                    track.track.album.images[0]\n                )\n            \n                return {\n                    artist: track.track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url,\n                }\n            })})\n          }, function(err) {\n            console.log('Something went wrong!', err);\n          });\n\n    })\n    return (\n        <div>\n           <div></div> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}