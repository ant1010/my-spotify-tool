{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Devices from './Devices';\nimport Volume from './Volume';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: px(10),\n  'pointer-events': 'none',\n  '> div + div': {\n    marginLeft: px(10)\n  },\n  '@media (max-width: 1023px)': {\n    bottom: 0,\n    position: 'absolute',\n    right: 0,\n    width: 'auto'\n  }\n}, function (_a) {\n  var style = _a.style;\n  return {\n    height: px(style.h)\n  };\n}, 'ActionsRSWP');\nexport default function Actions(props) {\n  var currentDeviceId = props.currentDeviceId,\n      deviceId = props.deviceId,\n      devices = props.devices,\n      isDevicesOpen = props.isDevicesOpen,\n      locale = props.locale,\n      onClickDevice = props.onClickDevice,\n      playerPosition = props.playerPosition,\n      setVolume = props.setVolume,\n      styles = props.styles,\n      volume = props.volume;\n  return _jsxs(Wrapper, __assign({\n    style: {\n      h: styles.height\n    }\n  }, {\n    children: [currentDeviceId && _jsx(Volume, {\n      playerPosition: playerPosition,\n      setVolume: setVolume,\n      styles: styles,\n      title: locale.volume,\n      volume: volume\n    }), _jsx(Devices, {\n      currentDeviceId: currentDeviceId,\n      deviceId: deviceId,\n      devices: devices,\n      onClickDevice: onClickDevice,\n      open: isDevicesOpen,\n      playerPosition: playerPosition,\n      styles: styles,\n      title: locale.devices\n    })]\n  }));\n}","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/node_modules/react-spotify-web-playback/src/components/Actions.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;AAEA,SAAS,EAAT,EAAa,MAAb,QAA2B,WAA3B;AAiBA,IAAM,OAAO,GAAG,MAAM,CAAC,KAAD,CAAN,CACd;AACE,EAAA,UAAU,EAAE,QADd;AAEE,EAAA,OAAO,EAAE,MAFX;AAGE,EAAA,cAAc,EAAE,UAHlB;AAIE,EAAA,YAAY,EAAE,EAAE,CAAC,EAAD,CAJlB;AAKE,oBAAkB,MALpB;AAOE,iBAAe;AACb,IAAA,UAAU,EAAE,EAAE,CAAC,EAAD;AADD,GAPjB;AAWE,gCAA8B;AAC5B,IAAA,MAAM,EAAE,CADoB;AAE5B,IAAA,QAAQ,EAAE,UAFkB;AAG5B,IAAA,KAAK,EAAE,CAHqB;AAI5B,IAAA,KAAK,EAAE;AAJqB;AAXhC,CADc,EAmBd,UAAC,EAAD,EAAuB;MAApB,KAAK,GAAA,EAAA,CAAA,K;AAAoB,SAAC;AAC3B,IAAA,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAP;AADiB,GAAD;AAE1B,CArBY,EAsBd,aAtBc,CAAhB;AAyBA,eAAc,SAAU,OAAV,CAAkB,KAAlB,EAA8B;AAExC,MAAA,eAAe,GAUb,KAAK,CAVQ,eAAf;AAAA,MACA,QAAQ,GASN,KAAK,CATC,QADR;AAAA,MAEA,OAAO,GAQL,KAAK,CARA,OAFP;AAAA,MAGA,aAAa,GAOX,KAAK,CAPM,aAHb;AAAA,MAIA,MAAM,GAMJ,KAAK,CAND,MAJN;AAAA,MAKA,aAAa,GAKX,KAAK,CALM,aALb;AAAA,MAMA,cAAc,GAIZ,KAAK,CAJO,cANd;AAAA,MAOA,SAAS,GAGP,KAAK,CAHE,SAPT;AAAA,MAQA,MAAM,GAEJ,KAAK,CAFD,MARN;AAAA,MASA,MAAM,GACJ,KAAK,CADD,MATN;AAYF,SACE,KAAA,CAAC,OAAD,EAAQ,QAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,CAAC,EAAE,MAAM,CAAC;AAAZ;AAAR,GAAA,EAA4B;AAAA,IAAA,QAAA,EAAA,CACjC,eAAe,IACd,IAAA,CAAC,MAAD,EAAO;AACL,MAAA,cAAc,EAAE,cADX;AAEL,MAAA,SAAS,EAAE,SAFN;AAGL,MAAA,MAAM,EAAE,MAHH;AAIL,MAAA,KAAK,EAAE,MAAM,CAAC,MAJT;AAKL,MAAA,MAAM,EAAE;AALH,KAAP,CAFgC,EAUlC,IAAA,CAAC,OAAD,EAAQ;AACN,MAAA,eAAe,EAAE,eADX;AAEN,MAAA,QAAQ,EAAE,QAFJ;AAGN,MAAA,OAAO,EAAE,OAHH;AAIN,MAAA,aAAa,EAAE,aAJT;AAKN,MAAA,IAAI,EAAE,aALA;AAMN,MAAA,cAAc,EAAE,cANV;AAON,MAAA,MAAM,EAAE,MAPF;AAQN,MAAA,KAAK,EAAE,MAAM,CAAC;AARR,KAAR,CAVkC;AAAA,GAA5B,CAAR,CADF;AAuBD","sourcesContent":["import Devices from './Devices';\nimport Volume from './Volume';\n\nimport { px, styled } from '../styles';\nimport { Locale, StyledProps, StylesOptions } from '../types/common';\nimport { SpotifyDevice } from '../types/spotify';\n\ninterface Props {\n  currentDeviceId: string;\n  deviceId: string;\n  devices: SpotifyDevice[];\n  isDevicesOpen: boolean;\n  locale: Locale;\n  onClickDevice: (deviceId: string) => any;\n  playerPosition: string;\n  setVolume: (volume: number) => any;\n  styles: StylesOptions;\n  volume: number;\n}\n\nconst Wrapper = styled('div')(\n  {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingRight: px(10),\n    'pointer-events': 'none',\n\n    '> div + div': {\n      marginLeft: px(10),\n    },\n\n    '@media (max-width: 1023px)': {\n      bottom: 0,\n      position: 'absolute',\n      right: 0,\n      width: 'auto',\n    },\n  },\n  ({ style }: StyledProps) => ({\n    height: px(style.h),\n  }),\n  'ActionsRSWP',\n);\n\nexport default function Actions(props: Props) {\n  const {\n    currentDeviceId,\n    deviceId,\n    devices,\n    isDevicesOpen,\n    locale,\n    onClickDevice,\n    playerPosition,\n    setVolume,\n    styles,\n    volume,\n  } = props;\n\n  return (\n    <Wrapper style={{ h: styles.height }}>\n      {currentDeviceId && (\n        <Volume\n          playerPosition={playerPosition}\n          setVolume={setVolume}\n          styles={styles}\n          title={locale.volume}\n          volume={volume}\n        />\n      )}\n      <Devices\n        currentDeviceId={currentDeviceId}\n        deviceId={deviceId}\n        devices={devices}\n        onClickDevice={onClickDevice}\n        open={isDevicesOpen}\n        playerPosition={playerPosition}\n        styles={styles}\n        title={locale.devices}\n      />\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}