{"ast":null,"code":"var _jsxFileName = \"/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Library.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Library.css\";\nimport { useDataLayerValue } from \"./ServiceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Library(_ref) {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [{\n    library\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    if (library.length != 0) {\n      return;\n    }\n\n    spotify.getMySavedTracks({\n      limit: 20,\n      offset: 1\n    }).then(function (data) {\n      console.log('Done!', data.items);\n      const trackslist = data.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      });\n      dispatch({\n        type: \"SET_LIBRARY\",\n        library: trackslist\n      });\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Library, \"SuJHsnQIrihtkEtil6aZiPHnLbk=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/spotify-clone/client/src/Library.js"],"names":["React","useEffect","useState","useDataLayerValue","Library","spotify","library","dispatch","length","getMySavedTracks","limit","offset","then","data","console","log","items","trackslist","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","type","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,eAAP;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AACA,eAAe,SAASC,OAAT,OAA4B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACvC,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAWC,QAAX,IAAuBJ,iBAAiB,EAA9C;AACAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,OAAO,CAACE,MAAR,IAAkB,CAArB,EAAuB;AAAC;AAAO;;AAE/BH,IAAAA,OAAO,CAACI,gBAAR,CAAyB;AACrBC,MAAAA,KAAK,EAAG,EADa;AAErBC,MAAAA,MAAM,EAAE;AAFa,KAAzB,EAIGC,IAJH,CAIQ,UAASC,IAAT,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,IAAI,CAACG,KAAzB;AACA,YAAMC,UAAU,GAAGJ,IAAI,CAACG,KAAL,CAAWE,GAAX,CAAeC,KAAK,IAAI;AACvC,cAAMC,kBAAkB,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjB,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACH,SAJsB,EAKvBL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,CALuB,CAA3B;AAQA,eAAO;AACHK,UAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBC,IADtB;AAEHC,UAAAA,KAAK,EAAEX,KAAK,CAACU,IAFV;AAGHE,UAAAA,GAAG,EAAEZ,KAAK,CAACY,GAHR;AAIHC,UAAAA,QAAQ,EAAEZ,kBAAkB,CAACa;AAJ1B,SAAP;AAMH,OAfkB,CAAnB;AAgBA1B,MAAAA,QAAQ,CAAC;AAAC2B,QAAAA,IAAI,EAAC,aAAN;AAAoB5B,QAAAA,OAAO,EAACW;AAA5B,OAAD,CAAR;AACD,KAvBH,EAuBK,UAASkB,GAAT,EAAc;AACfrB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCoB,GAArC;AACD,KAzBH;AA2BH,GA9BQ,CAAT;AA+BA,sBACI;AAAA,2BACG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCuB/B,O;UACSD,iB;;;KADTC,O","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"./Library.css\"\nimport {useDataLayerValue} from \"./ServiceProvider\"\nexport default function Library({spotify}) {\n    const [{library},dispatch] = useDataLayerValue();\n    useEffect(()=>{\n        if(library.length != 0){return}\n\n        spotify.getMySavedTracks({\n            limit : 20,\n            offset: 1\n          })\n          .then(function(data) {\n            console.log('Done!',data.items);\n            const trackslist = data.items.map(track => {\n                const smallestAlbumImage = track.album.images.reduce(\n                    (smallest, image) => {\n                        if (image.height < smallest.height) return image\n                        return smallest;\n                    },\n                    track.album.images[0]\n                )\n            \n                return {\n                    artist: track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url,\n                }\n            })\n            dispatch({type:\"SET_LIBRARY\",library:trackslist})\n          }, function(err) {\n            console.log('Something went wrong!', err);\n          });\n\n    })\n    return (\n        <div>\n           <div></div> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}